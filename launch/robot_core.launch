<launch>
  <arg name="namespace"/>
  <arg name="enableBridge" default="true"/>
  <arg name="localPort" default="4200"/>
  <arg name="default_nav_stack" default="true"/>
  <arg name="odom_topic" default="project11/odom"/>
  <arg name="bridge_name" default="$(arg namespace)"/>

  <rosparam command="load" file="$(find project11)/config/robot.yaml" ns="$(arg namespace)"/>

  <!-- The udp_bridge_node is what sends and receives messages from select topics to the operator. -->
  <node if="$(arg enableBridge)" pkg="udp_bridge" type="udp_bridge_node" name="udp_bridge" ns="$(arg namespace)">
    <param name="port" value="$(arg localPort)"/>
    <param name="name" value="$(arg bridge_name)"/>
  </node>
    
  <!-- Command bridge is used to robustly send operator commands over an unreliable connection. -->
  <node pkg="command_bridge" type="command_bridge_receiver_node.py" name="command_bridge_receiver" ns="$(arg namespace)"/>

  <!-- mru_transform Provides tf2 transforms from multiple gps and motion sensor sources. -->
  <node pkg="mru_transform" type="mru_transform_node" name="mru_transform" ns="$(arg namespace)">
    <param name="base_frame" value="$(arg namespace)/base_link"/>
    <param name="map_frame" value="$(arg namespace)/map"/>
    <param name="odom_frame" value="$(arg namespace)/odom"/>
    <remap from="nav/position" to="project11/nav/position"/>
    <remap from="nav/orientation" to="project11/nav/orientation"/>
    <remap from="nav/velocity" to="project11/nav/velocity"/>
    <remap from="nav/active_sensor" to="project11/nav/active_sensor"/>
    <remap from="odom" to="project11/odom"/>
  </node>
  
  <!-- helm_manager is the low level heart of project11. It manages which control messages get 
  sent to the robot based on piloting mode and reports the piloting mode and other status
  as a heartbeat message. -->
  <node pkg="helm_manager" type="helm_manager_node" name="helm_manager" ns="$(arg namespace)">
    <remap from="out/helm" to="project11/control/helm"/>
    <remap from="out/cmd_vel" to="project11/control/cmd_vel"/>
    <remap from="heartbeat" to="project11/heartbeat"/>
    <remap from="status/helm" to="project11/status/helm"/>
    <remap from="piloting_mode" to="project11/piloting_mode"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <param name="piloting_mode_prefix" value="project11/piloting_mode/"/>
  </node>

  <!-- mission_manager handles commands from the operator and manages the task list sent to the navigator.-->
  <node pkg="mission_manager" type="mission_manager_node.py" name="mission_manager" ns="$(arg namespace)">
      <param name="map_frame" value="$(arg namespace)/map"/>
  </node>

  <!-- project11_navigation is the plugin based navigation stack that uses a list of tasks to plan trajectories
  and generate commands to drive the robot. -->
  <node pkg="project11_navigation" type="navigator" name="navigator" ns="$(arg namespace)">
    <remap from="~/cmd_vel" to="project11/piloting_mode/autonomous/cmd_vel"/>
    <remap from="~/enable" to="project11/piloting_mode/autonomous/active"/>
    <remap from="odom" to="project11/odom"/>
  </node>
  <include if="$(arg default_nav_stack)" file="$(find project11_navigation)/launch/default_nav_stack.launch">
    <arg name="namespace" value="$(arg namespace)/navigator"/>
  </include>

</launch>
